# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import bankService_pb2 as bankService__pb2


class BankServiceStub(object):
    """The bank service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.MsgDelivery = channel.unary_unary(
                '/BankService.BankService/MsgDelivery',
                request_serializer=bankService__pb2.CustomerRequest.SerializeToString,
                response_deserializer=bankService__pb2.ResponseMessage.FromString,
                )
        self.Query = channel.unary_unary(
                '/BankService.BankService/Query',
                request_serializer=bankService__pb2.BalanceQuery.SerializeToString,
                response_deserializer=bankService__pb2.ResponseMessage.FromString,
                )
        self.Withdraw = channel.unary_unary(
                '/BankService.BankService/Withdraw',
                request_serializer=bankService__pb2.CustomerRequest.SerializeToString,
                response_deserializer=bankService__pb2.ResponseMessage.FromString,
                )
        self.Deposit = channel.unary_unary(
                '/BankService.BankService/Deposit',
                request_serializer=bankService__pb2.CustomerRequest.SerializeToString,
                response_deserializer=bankService__pb2.ResponseMessage.FromString,
                )
        self.Propagate_Withdraw = channel.unary_unary(
                '/BankService.BankService/Propagate_Withdraw',
                request_serializer=bankService__pb2.BranchRequest.SerializeToString,
                response_deserializer=bankService__pb2.ResponseMessage.FromString,
                )
        self.Propagate_Deposit = channel.unary_unary(
                '/BankService.BankService/Propagate_Deposit',
                request_serializer=bankService__pb2.BranchRequest.SerializeToString,
                response_deserializer=bankService__pb2.ResponseMessage.FromString,
                )


class BankServiceServicer(object):
    """The bank service definition.
    """

    def MsgDelivery(self, request, context):
        """Method for communication between Customer and Branch
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Query(self, request, context):
        """Method to query the balance of a Branch
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Withdraw(self, request, context):
        """Method to withdraw from a Branch
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Deposit(self, request, context):
        """Method to deposit to a Branch
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Propagate_Withdraw(self, request, context):
        """Method for Branch to handle requests from fellow branches
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Propagate_Deposit(self, request, context):
        """Method for Branch to handle requests from fellow branches
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BankServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'MsgDelivery': grpc.unary_unary_rpc_method_handler(
                    servicer.MsgDelivery,
                    request_deserializer=bankService__pb2.CustomerRequest.FromString,
                    response_serializer=bankService__pb2.ResponseMessage.SerializeToString,
            ),
            'Query': grpc.unary_unary_rpc_method_handler(
                    servicer.Query,
                    request_deserializer=bankService__pb2.BalanceQuery.FromString,
                    response_serializer=bankService__pb2.ResponseMessage.SerializeToString,
            ),
            'Withdraw': grpc.unary_unary_rpc_method_handler(
                    servicer.Withdraw,
                    request_deserializer=bankService__pb2.CustomerRequest.FromString,
                    response_serializer=bankService__pb2.ResponseMessage.SerializeToString,
            ),
            'Deposit': grpc.unary_unary_rpc_method_handler(
                    servicer.Deposit,
                    request_deserializer=bankService__pb2.CustomerRequest.FromString,
                    response_serializer=bankService__pb2.ResponseMessage.SerializeToString,
            ),
            'Propagate_Withdraw': grpc.unary_unary_rpc_method_handler(
                    servicer.Propagate_Withdraw,
                    request_deserializer=bankService__pb2.BranchRequest.FromString,
                    response_serializer=bankService__pb2.ResponseMessage.SerializeToString,
            ),
            'Propagate_Deposit': grpc.unary_unary_rpc_method_handler(
                    servicer.Propagate_Deposit,
                    request_deserializer=bankService__pb2.BranchRequest.FromString,
                    response_serializer=bankService__pb2.ResponseMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'BankService.BankService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BankService(object):
    """The bank service definition.
    """

    @staticmethod
    def MsgDelivery(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BankService.BankService/MsgDelivery',
            bankService__pb2.CustomerRequest.SerializeToString,
            bankService__pb2.ResponseMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Query(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BankService.BankService/Query',
            bankService__pb2.BalanceQuery.SerializeToString,
            bankService__pb2.ResponseMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Withdraw(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BankService.BankService/Withdraw',
            bankService__pb2.CustomerRequest.SerializeToString,
            bankService__pb2.ResponseMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Deposit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BankService.BankService/Deposit',
            bankService__pb2.CustomerRequest.SerializeToString,
            bankService__pb2.ResponseMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Propagate_Withdraw(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BankService.BankService/Propagate_Withdraw',
            bankService__pb2.BranchRequest.SerializeToString,
            bankService__pb2.ResponseMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Propagate_Deposit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BankService.BankService/Propagate_Deposit',
            bankService__pb2.BranchRequest.SerializeToString,
            bankService__pb2.ResponseMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
